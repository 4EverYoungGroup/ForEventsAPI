define({ "api": [  {    "type": "post",    "url": "/users/login",    "title": "login",    "version": "1.0.0",    "description": "<p>This endpoint allow user to authenticate in the system, the user must introduce email and password associated</p>",    "name": "login",    "group": "User",    "permission": [      {        "name": "none"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>Email of the user (unique ID)</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>Password of the user</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "ok",            "description": "<p>true</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "token",            "description": "<p>Token associated to user</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n      \"ok\": true,\n      \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7Il9pZCI6IjViZDE3N2UyZjIwZDMxMDNlYjUwZDljMiIsImVtYWlsIjoiYWZlcm5hbmRlemdyQGdtYWlsLmNvbSIsInBhc3N3b3JkIjoiODZhNTNkZDMzYWEyMTEyYWEwMWEwM2VkNDg4YTc5NGNmYmJmZTkyNjA3Njc4ODI3ZTI1YjdiMWY1MmRhZDhhMiIsImZpcnN0TmFtZSI6IlBlcGUiLCJsYXN0TmFtZSI6IlBlcmV6IiwiX192IjowfSwiaWF0IjoxNTQwNTQzODg2LCJleHAiOjE1NDA3MTY2ODZ9.PCOKKjIULDZJxzGZBmYUe-kiLJcW4FzIvAByNYnSpuU\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "user_not_found",            "description": "<p>The email of the User was not found</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "user_wrong_password",            "description": "<p>The password is incorrect for user provided</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"ok\": false\n  \"message\": \"user_not_found\"\n}\n\nHTTP/1.1 400 Bad Request\n{\n  \"ok\": false\n  \"message\": \"user_wrong_password\"\n}",          "type": "json"        }      ]    },    "filename": "ForEvents/routes/apiv1/users.js",    "groupTitle": "User"  },  {    "type": "post",    "url": "/users/register",    "title": "register",    "description": "<p>This endpoint allow user to register. The user must provide first name, last name, email, password</p> <ul> <li>It's not allowed to register two users with the same email</li> <li>Email format must be valid</li> <li>Passord must follow this rules: 6-50 length characters, must include one digit, one letter lower case and one letter upper case</li> </ul>",    "name": "register",    "group": "User",    "permission": [      {        "name": "none"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "firstName",            "description": "<p>First name of the user</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "lastName",            "description": "<p>Last name of the user</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>Email of the user (unique ID)</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>Password of the user</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "ok",            "description": "<p>true</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>user_created</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "user",            "description": "<p>JSON Object with the data of the user recentrly created</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 201 Created\n{\n   \"ok\": true,\n   \"message\": \"user_created\",\n   \"user\": {\n      \"email\": \"test@gmail.com\",\n      \"password\": \"b17e1e0450dac425ea318253f6f852972d69731d6c7499c001468b695b6da219\",\n      \"firstName\": \"Pepe\",\n      \"lastName\": \"Garc√≠a\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "user_email_duplicated",            "description": "<p>The email of the user is duplicated in database</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "user_wrong_password",            "description": "<p>The password is incorrect for user provided</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "validation_invalid_firstName",            "description": "<p>The lenght of firstName must be min 2 character</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "validation_invalid_email",            "description": "<p>The format of the email provided must be correct</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "password_not_valid_must_include_uppercase_lowercase_digits",            "description": "<p>The password must follow the rules of complexity established</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"ok\": false\n  \"message\": \"user_email_duplicated\"\n}\n\nHTTP/1.1 400 Bad Request\n{\n  \"ok\": false,\n  \"errors\": [\n  {\n      \"field\": \"firstName\",\n      \"message\": \"validation_invalid_firstName\"\n  },\n  {\n      \"field\": \"email\",\n      \"message\": \"validation_invalid_email\"\n  },\n  {\n      \"field\": \"password\",\n      \"message\": \"password_not_valid_must_include_uppercase_lowercase_digits\"\n  }]\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "ForEvents/routes/apiv1/users.js",    "groupTitle": "User"  }] });
