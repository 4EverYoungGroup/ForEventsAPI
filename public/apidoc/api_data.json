[  {    "type": "delete",    "url": "/users/:user_id",    "title": "delete",    "version": "1.0.0",    "description": "<p>This endpoint allows user to delete his user from the system.</p> <p>Restrictions:</p> <ul> <li>Only authenticated user can do this action</li> <li>Only the owner of the account or the administrator can delete an user</li> <li>When you delete a user all the events and searches saved will be deleted.</li> <li>The transacctions of user will not be deleted for statistics use</li> </ul>",    "name": "delete",    "group": "User",    "permission": [      {        "name": "authenticated_token_required: You must provide 'token' authorized in the querystring, body or header 'x-access-token'"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user_id",            "description": "<p>Id of User, object Id of MongoDB database</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "ok",            "description": "<p>true</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>user_deleted</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n      \"ok\": true,\n      \"message\": \"user_deleted\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "user_not_found",            "description": "<p>The email of the User was not found</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "user_wrong_password",            "description": "<p>The password is incorrect for user provided</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "action_not_allowed_credentials_error",            "description": "<p>Action not allowed with token provided</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 500 Server Error\n{\n  \"ok\": false\n  \"message\": \"error_accesing_data\"\n}\n\nHTTP/1.1 404 Not found\n{\n  \"ok\": false\n  \"message\": \"email_not_exist\"\n}\n\nHTTP/1.1 403 Forbidden\n{\n  \"ok\": false\n  \"message\": \"action_not_allowed_credentials_error\"\n}",          "type": "json"        }      ]    },    "filename": "ForEvents/routes/apiv1/users.apidoc",    "groupTitle": "User"  },  {    "type": "get",    "url": "/users/:user_id",    "title": "get",    "version": "1.0.0",    "description": "<p>This endpoint allow to recover the profile information of an user</p> <p>Restrictions:</p> <ul> <li>Only authenticated users can do this action</li> <li>Any user authenticated can do this action if he's not the owner of the account the info provided is restricted</li> </ul>",    "name": "get",    "group": "User",    "permission": [      {        "name": "authenticated_token_required: You must provide 'token' authorized in the querystring, body or header 'x-access-token'"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user_id",            "description": "<p>Id of User, object Id of MongoDB database</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "ok",            "description": "<p>true</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>user_info</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "user",            "description": "<p>JSON Object with the data of the user consulted</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 201 Created\n{\n   \"ok\": true,\n   \"message\": \"user_info\",\n   \"user\": {\n      \"email\": \"test@gmail.com\",\n      \"password\": \"b17e1e0450dac425ea318253f6f852972d69731d6c7499c001468b695b6da219\",\n      \"first_name\": \"Pepe\",\n      \"last_name\": \"García\"\n   }\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "user_email_duplicated",            "description": "<p>The email of the user is duplicated in database</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "user_wrong_password",            "description": "<p>The password is incorrect for user provided</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "validation_invalid_first_name",            "description": "<p>The lenght of first_name must be min 2 character</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "validation_invalid_email",            "description": "<p>The format of the email provided must be correct</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "password_not_valid_must_include_uppercase_lowercase_digits",            "description": "<p>The password must follow the rules of complexity established</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "\nHTTP/1.1 500 Server Error\n{\n  \"ok\": false\n  \"message\": \"error_accesing_data\"\n}\n\nHTTP/1.1 404 Not found\n{\n  \"ok\": false\n  \"message\": \"user_not_exist\"\n}",          "type": "json"        }      ]    },    "filename": "ForEvents/routes/apiv1/users.apidoc",    "groupTitle": "User"  },  {    "type": "post",    "url": "/users/login",    "title": "login",    "version": "1.0.0",    "description": "<p>This endpoint allow user to authenticate in the system, the user must introduce email and password associated</p>",    "name": "login",    "group": "User",    "permission": [      {        "name": "none"      }    ],    "parameter": {      "fields": {        "body": [          {            "group": "body",            "type": "String",            "size": "6..255",            "optional": false,            "field": "email",            "description": "<p>Email of the user (unique ID)</p>"          },          {            "group": "body",            "type": "String",            "size": "6..50",            "optional": false,            "field": "password",            "description": "<p>Password of the user</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "ok",            "description": "<p>true</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "token",            "description": "<p>Token associated to user</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": " HTTP/1.1 200 OK\n {\n       \"ok\": true,\n       \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7Il9pZCI6IjViZDE3N2UyZjIwZDMxMDNlYjUwZDljMiIsImVtYWlsIjoiYWZlcm5hbmRlemdyQGdtYWlsLmNvbSIsInBhc3N3b3JkIjoiODZhNTNkZDMzYWEyMTEyYWEwMWEwM2VkNDg4YTc5NGNmYmJmZTkyNjA3Njc4ODI3ZTI1YjdiMWY1MmRhZDhhMiIsImZpcnN0TmFtZSI6IlBlcGUiLCJsYXN0TmFtZSI6IlBlcmV6IiwiX192IjowfSwiaWF0IjoxNTQwNTQzODg2LCJleHAiOjE1NDA3MTY2ODZ9.PCOKKjIULDZJxzGZBmYUe-kiLJcW4FzIvAByNYnSpuU\"\n        \"user\": {\n        \"profile\": \"User\",\n        \"favorite_searches\": [],\n        \"transactions\": [],\n        \"events\": [],\n        \"validatedEmail\": true,\n        \"tokensFB\": [\n           \"31AAAaXfomec:APA91bFX8EaL2A8BkDrmztRbkcg_PFAMQY1CtObe0BiywhA_nikfwmMLltCO1ipHaciF9TgMVMTdZoQkjZffRWC-9_8H-lskMkykPVQr8GrUJrqp1aowe7_MIW_dydODRh12TlXEhq6X\",\n           \"31AAaXfomec:APA91bFX8EaL2A8BkDrmztRbkcg_PFAMQY1CtObe0BiywhA_nikfwmMLltCO1ipHaciF9TgMVMTdZoQkjZffRWC-9_8H-lskMkykPVQr8GrUJrqp1aowe7_MIW_dydODRh12TlXEhq6X\"\n        ],\n        \"_id\": \"5bfa701cc3d2ae826e4ebc55\",\n        \"email\": \"user@gmail.com\",\n        \"first_name\": \"John\",\n        \"last_name\": \"\",\n        \"password\": \"**ENCRYPTED**\",\n        \"alias\": \"anikiltor\",\n        \"address\": \"Calle Rue\",\n        \"province\": \"Madriles\",\n        \"country\": \"España\",\n        \"create_date\": \"2018-11-25T09:49:16.215Z\",\n        \"delete_date\": null,\n        \"__v\": 23\n        }\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "user_wrong_password",            "description": "<p>The password is incorrect for user provided</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "\nHTTP/1.1 400 Bad Request\n{\n  \"ok\": false\n  \"message\": \"user_or_password_wrong\"\n}",          "type": "json"        }      ]    },    "filename": "ForEvents/routes/apiv1/users.apidoc",    "groupTitle": "User"  },  {    "type": "post",    "url": "/users/recover",    "title": "recover",    "version": "1.0.0",    "description": "<p>This endpoint allows user to recover the password to access the system. An email will be sent to user with a link to establish the new password</p>",    "name": "recover",    "group": "User",    "permission": [      {        "name": "none"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>Email of the user (unique ID)</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "ok",            "description": "<p>true</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>recover-message-sent</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"ok\": true,\n  \"message\": \"recover-message-sent\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "error_accesing_data",            "description": "<p>Error accesing database</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "email_not_registered",            "description": "<p>Email not registered in database</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 500 Server error\n{\n  \"ok\": false\n  \"message\": \"error_accesing_data\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"ok\": false\n  \"message\": \"email_not_registered\"\n}",          "type": "json"        }      ]    },    "filename": "ForEvents/routes/apiv1/users.apidoc",    "groupTitle": "User"  },  {    "type": "post",    "url": "/users/register",    "title": "register",    "version": "1.0.0",    "description": "<p>This endpoint allow user to register. The user must provide first name, last name, email, password</p> <ul> <li>It's not allowed to register two users with the same email</li> <li>Email format must be valid</li> <li>Passord must follow this rules: 6-50 length characters, must include one digit, one letter lower case and one letter upper case</li> </ul>",    "name": "register",    "group": "User",    "permission": [      {        "name": "none"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "size": "2..50",            "optional": false,            "field": "first_name",            "description": "<p>First name of the user</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "2..255",            "optional": true,            "field": "last_name",            "description": "<p>Last name of the user</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "255",            "optional": true,            "field": "alias",            "description": "<p>Alias of the user</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "6..255",            "optional": false,            "field": "email",            "description": "<p>Email of the user (unique ID)</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "6..50",            "optional": false,            "field": "password",            "description": "<p>Password of the user</p>"          },          {            "group": "Parameter",            "type": "String",            "allowedValues": [              "\"Admin\"",              "\"Organizer\"",              "\"User\""            ],            "optional": false,            "field": "profile",            "defaultValue": "User",            "description": "<p>Type of users allowed in the system</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "255",            "optional": true,            "field": "address",            "description": "<p>Address of the user</p>"          },          {            "group": "Parameter",            "type": "ObjectId",            "optional": true,            "field": "city",            "description": "<p>ObjectId of City, from collection City</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "20",            "optional": true,            "field": "zip_code",            "description": "<p>Zip code of address of the user</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "255",            "optional": true,            "field": "province",            "description": "<p>Province of the user</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "255",            "optional": true,            "field": "country",            "description": "<p>Country of the user</p>"          },          {            "group": "Parameter",            "type": "Date",            "optional": true,            "field": "birthday_date",            "description": "<p>Birthday date of the user</p>"          },          {            "group": "Parameter",            "type": "String",            "allowedValues": [              "\"M\"",              "\"F\""            ],            "optional": true,            "field": "gender",            "description": "<p>Gender of user</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "idn",            "description": "<p>IDN of the user</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "255",            "optional": true,            "field": "company_name",            "description": "<p>Company name of the user</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "11",            "optional": true,            "field": "mobile_number",            "description": "<p>Mobile number of the user</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "ok",            "description": "<p>true</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>user_created</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "user",            "description": "<p>JSON Object with the data of the user recentfly created</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 201 Created\n{\n   \"ok\": true,\n   \"message\": \"user_created\",\n   \"user\": {\n      \"email\": \"test@gmail.com\",\n      \"password\": \"b17e1e0450dac425ea318253f6f852972d69731d6c7499c001468b695b6da219\",\n      \"first_name\": \"Pepe\",\n      \"last_name\": \"García\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "user_email_duplicated",            "description": "<p>The email of the user is duplicated in database</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "user_wrong_password",            "description": "<p>The password is incorrect for user provided</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "validation_invalid_first_name",            "description": "<p>The lenght of first_name must be min 2 character</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "validation_invalid_email",            "description": "<p>The format of the email provided must be correct</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "password_not_valid_must_include_uppercase_lowercase_digits",            "description": "<p>The password must follow the rules of complexity established</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"ok\": false\n  \"message\": \"user_email_duplicated\"\n}\n\nHTTP/1.1 400 Bad Request\n{\n  \"ok\": false,\n  \"errors\": [\n  {\n      \"field\": \"first_name\",\n      \"message\": \"validation_invalid_first_name\"\n  },\n  {\n      \"field\": \"email\",\n      \"message\": \"validation_invalid_email\"\n  },\n  {\n      \"field\": \"password\",\n      \"message\": \"password_not_valid_must_include_uppercase_lowercase_digits\"\n  }]\n}",          "type": "json"        }      ]    },    "filename": "ForEvents/routes/apiv1/users.apidoc",    "groupTitle": "User"  },  {    "type": "put",    "url": "/users/user_id",    "title": "update",    "version": "1.0.0",    "description": "<p>This endpoint allow user update the data of the user.</p> <ul> <li>It's only allowed to update data to owner of the account or an administrator</li> </ul>",    "name": "update",    "group": "User",    "permission": [      {        "name": "authenticated_token_required: You must provide 'token' authorized in the querystring, body or header 'x-access-token'"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "first_name",            "description": "<p>First name of the user</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "last_name",            "description": "<p>Last name of the user</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>Email of the user (unique ID)</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>Password of the user</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "ok",            "description": "<p>true</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>user_created</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "user",            "description": "<p>JSON Object with the data of the user recently updated</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 Created\n{\n   \"ok\": true,\n   \"message\": \"user_info\",\n   \"user\": {\n      \"email\": \"test@gmail.com\",\n      \"password\": \"\",\n      \"first_name\": \"Pepe\",\n      \"last_name\": \"García\"\n   }\n }",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "user_email_duplicated",            "description": "<p>The email of the user is duplicated in database</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "user_wrong_password",            "description": "<p>The password is incorrect for user provided</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "validation_invalid_first_name",            "description": "<p>The lenght of first_name must be min 2 character</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "validation_invalid_email",            "description": "<p>The format of the email provided must be correct</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "password_not_valid_must_include_uppercase_lowercase_digits",            "description": "<p>The password must follow the rules of complexity established</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "\nHTTP/1.1 500 Server Error\n{\n  \"ok\": false\n  \"message\": \"error_accesing_data\"\n}\n\nHTTP/1.1 404 Not found\n{\n  \"ok\": false\n  \"message\": \"email_not_exist\"\n}\n\nHTTP/1.1 400 Bad Request\n{\n  \"ok\": false,\n  \"errors\": [\n  {\n      \"field\": \"first_name\",\n      \"message\": \"validation_invalid_first_name\"\n  },\n  {\n      \"field\": \"email\",\n      \"message\": \"validation_invalid_email\"\n  },\n  {\n      \"field\": \"password\",\n      \"message\": \"password_not_valid_must_include_uppercase_lowercase_digits\"\n  }]\n}",          "type": "json"        }      ]    },    "filename": "ForEvents/routes/apiv1/users.apidoc",    "groupTitle": "User"  }]
